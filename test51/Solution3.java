package test51;
/*
 * 数组中数值和下标相等的元素
 * 假设一个单调递增的数组里的每个元素都是整数并且是唯一的。请编程实现一个函数找出数组中任意一个数值等于其下标的元素。
 * 例如，在数组{-3, -1, 1, 3, 5}中，数字3和它的下标相等。
 * 
 * 思路：数组是递增有序的，使用二分查找。先获取数组的中间数，若中间数的值和下标相等，则找到一个满足条件的数；
 * 若中间数的值大于它的下标，则根据数组递增的特性可知：中间数以后的元素的值至少每个比前面大1，同时它们的下标每次也是增加1，
 * 从而后面的这些元素的值都大于它们的下标，因此需要继续在前面寻找。
 * 同理，若中间数的值小于它的下标，则中间数前面的那些元素的值也都小于它们的下标，因此需要继续在后面寻找。
 * 
 * 时间复杂度O(log n)
 */
public class Solution3 {
	 public int getNumberSameAsIndex(int[] nums) { 
		 if (nums == null) 
			 return -1; 
		 
		 int l = 0; 
		 int h = nums.length - 1; 
		 //二分查找的变形 
		 while (l <= h) { 
			 int m = l + (h - l) / 2; 
			 
			 if (nums[m] == m) 
				 return m;
			 
			 else if (nums[m] > m) 
				 h = m - 1;  //在前面查找 
			 
			 else if (nums[m] < m) 
				 l = m + 1; //在后面查找 
			 
			 } 
		 return -1; 
	}
}

